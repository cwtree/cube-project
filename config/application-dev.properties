server.port=9288
# 根据自身环境修改
server.tomcat.basedir=./basedir
# 多个项目放在nginx下同个端口，通过该配置区分
server.servlet.context-path=/cube

#配置加密salt
jasypt.encryptor.password=mycmccsalt
jasypt.encryptor.iv-generator-classname=org.jasypt.iv.NoIvGenerator
jasypt.encryptor.algorithm=PBEWithMD5AndTripleDES

#config log
logging.file.name = ./logs/cube-boot.log
logging.level.com.cube = INFO
logging.level.root = INFO

logging.pattern.console = [%d{yy-MM-dd HH:mm:ss:SSS}][%-5p][%c][%t]%m%n
logging.pattern.file = [%d{yy-MM-dd HH:mm:ss:SSS}][%-5p][%c][%t]%m%n
#save 15 days
logging.logback.rollingpolicy.max-history = 15
logging.logback.rollingpolicy.max-file-size = 100MB
logging.logback.rollingpolicy.file-name-pattern = ${LOG_FILE}/cube-boot.log.%d{yyyyMMdd}

#mybatis config
mybatis.mapper-locations=classpath*:mappers/*.xml
mybatis.type-aliases-package=com.cube.pojo.doo

#db config
spring.datasource.url=jdbc:mysql://172.21.44.171:33061/phoenix?serverTimezone=Asia/Shanghai&zeroDateTimeBehavior=convertToNull&useUnicode=true
spring.datasource.username=phoenix
spring.datasource.password=ENC(9MV7qeG+14sJLv5NM0ePKdJI6FnqlnIc)
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# 连接池配置
# 初始化连接数
spring.datasource.druid.initial-size=4
# 最小空闲连接数，一般设置和initial-size一致
spring.datasource.druid.min-idle=4
# 最大活动连接数
spring.datasource.druid.max-active=32
# 从连接池获取连接超时
spring.datasource.druid.max-wait=8000
# 打开PSCache，并且指定每个连接上PSCache的大小
# Oracle等支持游标的数据库，打开此开关，会以数量级提升性能，具体查阅PSCache相关资料
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-open-prepared-statements=32
# 检验连接是否有效的查询语句
# 如果数据库Driver支持ping()方法，则优先使用ping()方法进行检查，否则使用validationQuery查询进行检查
spring.datasource.druid.validation-query=select 1 from dual
# 设置从连接池获取连接时是否检查连接有效性，true时，每次都检查;false时，不检查
spring.datasource.druid.test-on-borrow=true
# 设置往连接池归还连接时是否检查连接有效性，true时，每次都检查;false时，不检查
spring.datasource.druid.test-on-return=true
# 设置从连接池获取连接时是否检查连接有效性
# 为true时，如果连接空闲时间超过minEvictableIdleTimeMillis进行检查，否则不检查
# 为false时，不检查
spring.datasource.druid.test-while-idle=true
# 配置间隔多久启动一次DestroyThread，对连接池内的连接才进行一次检测，单位是毫秒。
# 1.如果连接空闲并且超过minIdle以外的连接，如果空闲时间超过minEvictableIdleTimeMillis设置的值则直接物理关闭。
# 2.在minIdle以内的不处理。
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最大空闲时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000
# 打开后，增强timeBetweenEvictionRunsMillis的周期性连接检查，minIdle内的空闲连接
# 每次检查强制验证连接有效性
spring.datasource.druid.keep-alive=true
#开启后台输出SQL
spring.jpa.show-sql=true

# Redis
spring.redis.host = 172.21.44.25
spring.redis.port = 8379
spring.redis.database = 8
spring.redis.timeout = 30000
spring.redis.password = ENC(9MV7qeG+14sJLv5NM0ePKdJI6FnqlnIc)
#连接池最大连接数（使用负值表示没有限制）
spring.redis.lettuce.pool.max-active=8
#连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.lettuce.pool.max-wait=4000
#连接池中的最大空闲连接
spring.redis.lettuce.pool.max-idle=8
#连接池中的最小空闲连接
spring.redis.lettuce.pool.min-idle=8

#customer define prop
cube.boot.system-name=ENC(ZdMzV470k8TgHPC4iEWnxkg4MEXiIVWZ)
cube.boot.swagger-switch=true
#config request dec switch,true=dec,false=plain do nothing
cube.boot.request-dec-switch=false
#config response enc switch,true=enc,false=plain do nothing
cube.boot.response-enc-switch=false
#config aes key
cube.boot.req.resp.aes.key=ENC(ZXGBr1hzr+kHc6l+o06mR2mu4omf8G8LSnaGnqRliF2AlqzYPiiilQ==)
#Yw/Vz4kpJUv0+E/4/LuZEA==





